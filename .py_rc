import os

print('preimporting')

def pdir(*argv):
    if len(argv)==0:
        res=[i for i in globals()]
    elif len(argv)==1:
        res=dir(argv[0])
    else:
        res=[i for i in dir(argv[0]) if argv[1] in i]
    print('\t'.join(res))

def find(root,name):
    try:
        if '__module__' in dir(root):
            path=root.__module__+'.'+root.__name__
        else:
            path=root.__name__
        print(path,end='\r')
        for i in dir(root):
            if name.lower() in i.lower():
                print(path+'.'+i)
            find(eval(path+'.'+i),name)
    except Exception as e:
#print(e)
        pass

def readBytes(name):
    with open(name,'rb') as f:
        return f.read()

def writeBytes(name,bt):
    with open(name,'wb') as f:
        f.write(bt)

def execfile(path):
    '''
        exec file with path `path` in global scope
    '''
    with open(path) as f:
        exec(f.read(),globals())

class Cmd:
    def __repr__(self):
        self.execute()
        return ''

    def execute(self):
        pass

class FCmd(Cmd):
    def __init__(self,f):
        self.f=f

    def execute(self):
        self.f()

class OsCmd(FCmd):
    def __init__(self,cmd):
        super().__init__(lambda : os.system(cmd))

cls=OsCmd('cls')
q=FCmd(lambda :exit(0))

if 'auto_load.py' in os.listdir():
    execfile('auto_load.py')
#    from auto_load import *

if 'load_list' in dir():
    for i in load_list:
        exec('from %s import *' % i)

    del load_list
